{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emptinesssick\\\\Desktop\\\\los\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport AdviceCard from './components/AdviceCard';\nimport ThemeToggle from './components/ThemeToggle';\nimport Navbar from './components/Navbar';\nimport Favorite from './components/Favorite';\nimport Challenge from './components/Challenge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst adviceList = [\"Не откладывай важное на завтра.\", \"Занимайся спортом хотя бы 15 минут в день.\", \"Учись на своих ошибках и растешь.\", \"Будь лучшей версией себя каждый день.\", \"Ты можешь больше, чем думаешь!\", \"Верь в себя, даже когда никто не верит.\", \"Каждый день - новый шанс.\"];\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [advice, setAdvice] = useState(adviceList[Math.floor(Math.random() * adviceList.length)]);\n  const [favorites, setFavorites] = useState([]);\n  const [challengeComplete, setChallengeComplete] = useState(false);\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  const generateAdvice = () => {\n    setAdvice(adviceList[Math.floor(Math.random() * adviceList.length)]);\n  };\n  const addToFavorites = () => {\n    if (!favorites.includes(advice)) {\n      setFavorites([...favorites, advice]);\n    }\n  };\n  const completeChallenge = () => {\n    setChallengeComplete(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n        toggleTheme: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(AdviceCard, {\n          advice: advice,\n          generateAdvice: generateAdvice,\n          addToFavorites: addToFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Favorite, {\n          favorites: favorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Challenge, {\n          completeChallenge: completeChallenge,\n          challengeComplete: challengeComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"05+69CfIbSIP1eCXiN2Pr0iPeXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AdviceCard","ThemeToggle","Navbar","Favorite","Challenge","jsxDEV","_jsxDEV","adviceList","App","_s","theme","setTheme","advice","setAdvice","Math","floor","random","length","favorites","setFavorites","challengeComplete","setChallengeComplete","toggleTheme","generateAdvice","addToFavorites","includes","completeChallenge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emptinesssick/Desktop/los/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\nimport AdviceCard from './components/AdviceCard';\nimport ThemeToggle from './components/ThemeToggle';\nimport Navbar from './components/Navbar';\nimport Favorite from './components/Favorite';\nimport Challenge from './components/Challenge';\n\nconst adviceList = [\n  \"Не откладывай важное на завтра.\",\n  \"Занимайся спортом хотя бы 15 минут в день.\",\n  \"Учись на своих ошибках и растешь.\",\n  \"Будь лучшей версией себя каждый день.\",\n  \"Ты можешь больше, чем думаешь!\",\n  \"Верь в себя, даже когда никто не верит.\",\n  \"Каждый день - новый шанс.\"\n];\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const [advice, setAdvice] = useState(adviceList[Math.floor(Math.random() * adviceList.length)]);\n  const [favorites, setFavorites] = useState([]);\n  const [challengeComplete, setChallengeComplete] = useState(false);\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  const generateAdvice = () => {\n    setAdvice(adviceList[Math.floor(Math.random() * adviceList.length)]);\n  };\n\n  const addToFavorites = () => {\n    if (!favorites.includes(advice)) {\n      setFavorites([...favorites, advice]);\n    }\n  };\n\n  const completeChallenge = () => {\n    setChallengeComplete(true);\n  };\n\n  return (\n    <div className={`app ${theme}`}>\n      <Navbar />\n      <div className=\"container\">\n        <ThemeToggle toggleTheme={toggleTheme} />\n        <div className=\"content\">\n          <AdviceCard advice={advice} generateAdvice={generateAdvice} addToFavorites={addToFavorites} />\n          <Favorite favorites={favorites} />\n          <Challenge completeChallenge={completeChallenge} challengeComplete={challengeComplete} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}